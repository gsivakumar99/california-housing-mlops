name: CI with DVC and Azure

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Ensure the directory is initialized as a DVC repository
    - name: Initialize DVC repository
      run: |
        git init  # Initialize Git repo (if not done yet)
        dvc init  # Initialize DVC repo

    # Step 4: Configure DVC and Azure credentials
    - name: Configure DVC with Azure
      env:
        AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
        AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
      run: |
        dvc version
        echo "Azure credentials set up."

    # Step 5: Pull DVC data
    - name: Pull DVC data
      env:
        AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
        AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
      run: |
        dvc pull
        echo "DVC data pulled successfully."

    # Step 7: Push changes to DVC (if needed)
    - name: Push DVC changes
      if: github.ref == 'refs/heads/master'
      env:
        AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
        AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
      run: |
        dvc push
        echo "DVC data pushedÂ successfully."
